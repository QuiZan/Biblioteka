create or replace TRIGGER updateksiazki
AFTER UPDATE
ON KSIAZKA
FOR EACH ROW
BEGIN
  INSERT INTO ZMIANAKSIAZKI(id, TYTUL, ROK_WYDANIA, ISBN, OPIS)
  VALUES(current_timestamp, :old.TYTUL, :old.ROK_WYDANIA, :old.ISBN, :old.OPIS);
END;


create or replace TRIGGER KSIAZKA_INSERT
AFTER INSERT
ON KSIAZKA
BEGIN
       INSERT INTO LOGS(DATA, KTO)
       VALUES(current_timestamp, (select user from dual));
END;

create or replace TRIGGER AUTOR_DELETE
AFTER DELETE
ON AUTOR FOR EACH ROW
DECLARE
 v_username varchar2(10);
BEGIN      
        SELECT user INTO v_username
        FROM dual;
   
      INSERT INTO USUNIECI_AUTORZY(ID, IMIE, NAZWISKO, KTO)
      VALUES(:old.ID, :old.Imie, :old.Nazwisko, v_username);
END;


  CREATE TABLE "STUDENT"."ZMIANAKSIAZKI" 
   (	"ID" TIMESTAMP (6), 
	"TYTUL" VARCHAR2(50 BYTE), 
	"ROK_WYDANIA" DATE, 
	"ISBN" CHAR(13 BYTE), 
	"OPIS" VARCHAR2(500 BYTE)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM" ;
REM INSERTING into STUDENT2.ZMIANAKSIAZKI
SET DEFINE OFF;

  CREATE TABLE "STUDENT"."LOGS" 
   (	"DATA" TIMESTAMP (6), 
	"KTO" VARCHAR2(50 BYTE)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM" ;
REM INSERTING into STUDENT2.LOGS
SET DEFINE OFF;

  CREATE TABLE "STUDENT"."USUNIECI_AUTORZY" 
   (	"ID" INT, 
	"IMIE" VARCHAR2(50 BYTE), 
	"NAZWISKO" DATE, 
	"KTO" VARCHAR2(50 BYTE))
   );